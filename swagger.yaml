swagger: "2.0"
info:
  version: "1.0.0"
  title: "Resource360App API"
  description: "API documentation for Resource360 Application"
host: "localhost:3000"
basePath: "/resource"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /details:
    post:
      summary: "Register a new user"
      description: "Create a new user in the system"
      parameters:
        - in: "body"
          name: "body"
          description: "User registration details"
          required: true
          schema:
            $ref: "#/definitions/UserRegistration"
      responses:
        "200":
          description: "User registered successfully"
        "401":
          description: "Failed to register the user"
  /fatchAll:
    get:
      summary: "Fetch all users"
      description: "Retrieve all registered users"
      responses:
        "200":
          description: "List of all users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserRegistration"
        "404":
          description: "No users found"
        "400":
          description: "Error occurred"
  /login:
    post:
      summary: "User login"
      description: "Authenticate a user using email and password"
      parameters:
        - in: "body"
          name: "body"
          description: "Login credentials"
          required: true
          schema:
            $ref: "#/definitions/LoginRequest"
      responses:
        "200":
          description: "Login successful"
        "401":
          description: "Invalid credentials"
        "404":
          description: "User not found"
        "500":
          description: "Server error"
  /status:
    post:
      summary: "Create a resource status"
      description: "Add a new status for a resource"
      parameters:
        - in: "body"
          name: "body"
          description: "Status details"
          required: true
          schema:
            $ref: "#/definitions/StatusTable"
      responses:
        "200":
          description: "Status created successfully"
        "401":
          description: "Failed to create status"
  /dailyStatus:
    post:
      summary: "Get daily resource status"
      description: "Retrieve daily status of a user"
      parameters:
        - in: "body"
          name: "body"
          description: "Daily status request"
          required: true
          schema:
            $ref: "#/definitions/DailyStatusRequest"
      responses:
        "200":
          description: "Daily status fetched"
        "401":
          description: "Error fetching status"
  /allStatus/{username}:
    post:
      summary: "Fetch all statuses"
      description: "Retrieve all statuses for a user"
      parameters:
        - in: "path"
          name: "username"
          required: true
          type: "string"
          description: "Username of the user"
      responses:
        "200":
          description: "All statuses fetched"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StatusTable"
        "401":
          description: "Error fetching statuses"

definitions:
  UserRegistration:
    type: "object"
    properties:
      fullname:
        type: "string"
      username:
        type: "string"
      designation:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      reportsTo:
        type: "string"
      shiftTime:
        type: "string"
    required:
      - fullname
      - username
      - designation
      - email
      - password
      - reportsTo
      - shiftTime
  LoginRequest:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
    required:
      - email
      - password
  StatusTable:
    type: "object"
    properties:
      username:
        type: "string"
      date:
        type: "string"
        format: "date"
      status:
        type: "object"
  DailyStatusRequest:
    type: "object"
    properties:
      username:
        type: "string"
      date:
        type: "string"
        format: "date"
    required:
      - username
      - date